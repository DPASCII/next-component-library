{"version":3,"file":"withThemeProvider-BzEFvOAD.js","sources":["../src/features/withThemeProvider.tsx"],"sourcesContent":["import type { FC } from \"react\";\nimport React, { ReactNode } from \"react\";\nimport { useGlobalThemesPreview } from \"./useGlobalThemes\";\n\nexport const withThemeProvider =\n  <TTheme,>(Provider: FC<{ children?: ReactNode; theme?: TTheme }>) =>\n  (\n    Story: FC\n  ) => {\n    const { themes = [], selectedTheme } = useGlobalThemesPreview();\n\n    const selectedThemeData = themes.find(\n      ({ name }) => Boolean(selectedTheme) && name === selectedTheme\n    );\n\n    return (\n      <Provider theme={selectedThemeData?.themeObject}><Story /></Provider>\n    );\n  };\n"],"names":["withThemeProvider","Provider","Story","themes","selectedTheme","useGlobalThemesPreview","selectedThemeData","name","jsx"],"mappings":";;AAIO,MAAMA,IACX,CAAUC,MACV,CACEC,MACG;AACH,QAAM,EAAE,QAAAC,IAAS,CAAA,GAAI,eAAAC,EAAA,IAAkBC,EAAuB,GAExDC,IAAoBH,EAAO;AAAA,IAC/B,CAAC,EAAE,MAAAI,QAAW,EAAQH,KAAkBG,MAASH;AAAA,EACnD;AAEA,2BACGH,GAAS,EAAA,OAAOK,KAAA,gBAAAA,EAAmB,aAAa,UAAA,gBAAAE,EAACN,KAAM,EAAE,CAAA;AAE9D;"}